// Copyright (c) Xenko contributors (https://xenko.com) and Silicon Studio Corp. (https://www.siliconstudio.co.jp)
// Distributed under the MIT license. See the LICENSE.md file in the project root for more information.
shader SpriteEffectExtTexture : ShaderBase
{
    // Color used to tint the sprite
    [Color]
    stage float4 Color = float4(1,1,1,1);

    stage bool IsChromaActive = false;
    stage float Similarity = 0.2f;
    stage float Smoothness = 0.1f;
	[Color]
	stage float3 ChromaKeyColor = float3(0.0, 0.0, 0.0);

    stage bool IsHDR = false;

    stage Texture2D XenkoInternal_TextureExt0;    // DO NOT RENAME THIS VARIABLE! The ShaderCompiler specifically looks for "TextureExt0".

    stage stream float2 TexCoord : TEXCOORD0;
    stage stream float4 Position : POSITION;

    stage SamplerState Sampler
    {
        Filter = MIN_MAG_MIP_LINEAR;
        AddressU = Clamp;
        AddressV = Clamp;
    };

    stage override void VSMain()
    {
        streams.ShadingPosition = streams.Position;
    }

    stage override void PSMain()
    {
        float4 color = Shading();

        if (IsChromaActive)
        {
            float chromaDist = distance(color.rgb, ChromaKeyColor) / 1.7320508f; 

            float baseMask = chromaDist - Similarity;
            float fullMask = pow(saturate(baseMask / Smoothness), 1.5f);

            color.a = fullMask;
            color.rgb *= step(0.0001, fullMask);
        }

		streams.ColorTarget = color;
    }

    stage float4 Shading()
    {
        var value = XenkoInternal_TextureExt0.Sample(Sampler, streams.TexCoord).rgb;
        if (IsHDR)
        {
            value = ColorUtility.ToSDR(value);
        }
        return float4(value, 1.0) * Color;
    }
};
