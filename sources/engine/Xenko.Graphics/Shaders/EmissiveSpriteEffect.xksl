// Copyright (c) Xenko contributors (https://xenko.com) and Silicon Studio Corp. (https://www.siliconstudio.co.jp)
// Distributed under the MIT license. See the LICENSE.md file in the project root for more information.
shader EmissiveSpriteEffect : SpriteBase
{
    stage stream float4 Intensity;

    stage bool UseIntensity = false;

    stage float BaseIntensity = 0;

    stage float IntensityMultiplier = 1.0f;

    // Textures used to tint the sprite
    stage Texture2D IntensityTexture1;
	stage Texture2D IntensityTexture2;

    // Color used to tint the sprite
    [Color]
    stage float4 Color = float4(1,1,1,1);

    stage override void VSMain()
    {
        base.VSMain();
        if (UseIntensity)
        {
            // Use the average color of the textures (from the last mip) as the intensity
            float3 avg = (IntensityTexture1.SampleLevel(Sampler, float2(0.0f, 0.0f), 16.0f).rgb + IntensityTexture2.SampleLevel(Sampler, float2(0.0f, 0.0f), 16.0f).rgb) * IntensityMultiplier;

            // Add a small amount of light so result isn't completely black
            streams.Intensity = float4(min(1.0f, avg.r + BaseIntensity), min(1.0f, avg.g + BaseIntensity), min(1.0f, avg.b + BaseIntensity), 1.0f);
        }
    }

    // Shading of the sprite
    stage override float4 Shading()
    {
        if (UseIntensity)
        {
           return base.Shading() * streams.Intensity * Color;
        }
        else
        {
            return base.Shading() * Color;
        }
    }
};
