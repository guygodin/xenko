// Copyright (c) Xenko contributors (https://xenko.com) and Silicon Studio Corp. (https://www.siliconstudio.co.jp)
// Distributed under the MIT license. See the LICENSE.md file in the project root for more information.
shader SharpenEffect : SpriteEffect
{
	stage float2 OneOverTexSize;
    stage float Sharpening = -0.175f; // -0.1 to -0.2

	stage float3 CAS(in float3 a, in float2 uv)
    {
        float3 b = Texture0.Sample(Sampler, uv + float2(-OneOverTexSize.x, 0.0)).rgb;
        float3 c = Texture0.Sample(Sampler, uv + float2( 0.0, -OneOverTexSize.y)).rgb;
        float3 d = Texture0.Sample(Sampler, uv + float2( OneOverTexSize.x, 0.0)).rgb;
        float3 e = Texture0.Sample(Sampler, uv + float2( 0.0,  OneOverTexSize.y)).rgb;
        float2 minMaxG = float2(min(a.g, min(b.g, min(c.g, min(d.g, e.g)))), max(a.g, max(b.g, max(c.g, max(d.g, e.g)))));
        minMaxG.y += 0.0005f;
        float AA = sqrt(min(1.0 - minMaxG.y, minMaxG.x) / minMaxG.y);
        float w = Sharpening * AA;
        return (w * (b + c + d + e) + a) / (w * 4.0 + 1.0);
    }

    stage override float4 Shading()
    {
        float2 uv = streams.TexCoord;
        float2 normUV = uv * 2.0 - 1.0;

        float4 a = Texture0.Sample(Sampler, uv).rgba;
        
        if (length(normUV) <= 0.75)
        {
            return float4(CAS(a.rgb, uv), a.a);
        }
        return a;
    }
};
